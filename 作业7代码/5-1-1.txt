#include<stdio.h>
#include<curses.h>
#include<signal.h>
#include<stdlib.h>
#include<string.h>
#include<fcntl.h>
#include<sys/time.h>

#define BLANK "                    "

//char words[10][20]={"handsome","beautiful","landscape","fantastic","negligible","comfortable","active","energetic","humurous","encounter"};
char word[16]={'H','n','s','M','a','E','A','D','d','m','h','N','S','o','e','O'};//handsome HANDSOME
int row;
int col;
int delay=200;
int score=0;
int ri=0;
int done=0;

void on_alarm();
void on_input();
void enable_kbd_signals();

int main()
{
	int c;
	row=LINES/2-1;
	col=COLS/2-1;
	initscr();
	crmode();
	noecho();
	clear();

	signal(SIGIO,on_input);
	enable_kbd_signals();
	signal(SIGALRM,on_alarm);
	set_ticker(delay);

	mvaddch(row,col,word[ri]);
	move(LINES-1,COLS-1);
	refresh();

	while(!done)
		pause();
	endwin();
	printf("You get %d scores!\n",score);//display results
	return 0;
}

void enable_kbd_signals()
{
	int fd_flags;
	fcntl(0,F_SETOWN,getpid());//notify OS
	fd_flags=fcntl(0,F_GETFL);
	fcntl(0,F_SETFL,(fd_flags|O_ASYNC));//open input signal
}
	
void on_alarm()
{
	signal(SIGALRM,on_alarm);
	mvaddstr(row,col,BLANK);
	ri=rand()%10;//random get index
	row=rand()%LINES;//random row
	col=rand()%COLS;//random col
	srand((unsigned int)time(NULL));//set the seeds
	mvaddch(row,col,word[ri]);//display the character
	
	move(LINES-1,COLS-1);//park the cursor
	refresh();
}

void on_input()
{
	int c=getch();
	if(c=='Q')
		done=1;
	else if(c==word[ri]){//input is right
		score++;
		mvaddstr(LINES/2-1,COLS/2-1,"Bingo!");//hint words
		move(LINES-1,COLS-1);
		sleep(1);
		mvaddstr(LINES/2-1,COLS/2-1,"      ");
	}
	else
		beep();//bee..
}

set_ticker( n_msecs )
{
        struct itimerval new_timeset;
        long    n_sec, n_usecs;

        n_sec = n_msecs / 1000 ;
        n_usecs = ( n_msecs % 1000 ) * 1000L ;

        new_timeset.it_interval.tv_sec  = n_sec;        /* set reload  */
        new_timeset.it_interval.tv_usec = n_usecs;      /* new ticker value */
        new_timeset.it_value.tv_sec     = n_sec  ;      /* store this   */
        new_timeset.it_value.tv_usec    = n_usecs ;     /* and this     */

	return setitimer(ITIMER_REAL, &new_timeset, NULL);
}