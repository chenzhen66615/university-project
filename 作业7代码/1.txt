
#include	<stdio.h>
#include	<curses.h>
#include	<signal.h>
#include  	<string.h>
#include        <sys/time.h>
#include	<math.h>


#define	MESSAGE	"O"
#define BLANK   " "

int row=10;	
int col=0;
int rdir=-1;	
int cdir=1;
int delay=100;
int count=0;

int main()
{
	void on_alarm(int);
	signal(SIGALRM,on_alarm);
	set_ticker(delay);
	initscr();
	crmode();
	noecho();
	clear();
	standout();
	while(1)
		pause();
	getch();
	endwin();
	return 0;
}

void on_alarm(int signum)
{
	signal(SIGALRM,on_alarm);
	mvaddstr(row,col,BLANK);
	row+=rdir;
	col+=cdir;
	mvaddstr(row,col,MESSAGE);
	move(LINES-1,COLS-1);
	refresh();
	if(rdir==-1&&row<=8+4*count)
		rdir=1;
	else if(rdir==1&&row>=12+4*count)
		rdir=-1;
	if(col+strlen(MESSAGE)>=COLS)
	{	
		int j=12+4*count-row;
		for(int i=0;i<2*j;i++)
		{
			mvaddstr(row,col,BLANK);
			row++;
			mvaddstr(row,col,MESSAGE);
			move(LINES-1,COLS-1);
			refresh();
		}
		count++;
		cdir=-cdir;	
	}
	else if(col<=0)
		signal(SIGALRM,SIG_IGN);
}	
set_ticker( n_msecs )
{
        struct itimerval new_timeset;
        long    n_sec, n_usecs;

        n_sec = n_msecs / 1000 ;
        n_usecs = ( n_msecs % 1000 ) * 1000L ;

        new_timeset.it_interval.tv_sec  = n_sec;        
        new_timeset.it_interval.tv_usec = n_usecs;    
        new_timeset.it_value.tv_sec     = n_sec  ;     
        new_timeset.it_value.tv_usec    = n_usecs ;     

	return setitimer(ITIMER_REAL, &new_timeset, NULL);
}



